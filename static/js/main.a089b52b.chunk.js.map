{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_TYPE_AB","SORT_TYPE_LENGTH","App","useState","sortType","setSortType","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","firstGood","secondGood","localeCompare","length","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,OACfC,EAAmB,SA2BlB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA5BR,SAA0BC,GAAoC,IAAD,yDAAJ,GAAtBL,EAA0B,EAA1BA,SAAUE,EAAgB,EAAhBA,QACvCI,EAAa,YAAOD,GAqBxB,OAnBIL,IACFM,EAAgBA,EAAcC,MAAK,SAACC,EAAWC,GAC7C,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAUE,cAAcD,GAEjC,KAAKZ,EACH,OAAOW,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,OAKXT,IACFI,EAAgBA,EAAcJ,WAGzBI,EAMcM,CAAiBjB,EAAiB,CAAEK,WAAUE,YAEnE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAYL,IAC3BmB,KAAK,SACLF,UACEG,IAAG,iBAAkB,CAAE,WAAYhB,IAAaJ,IAJpD,iCAUA,wBACEkB,QAAS,kBAAMb,EAAYJ,IAC3BkB,KAAK,SACLF,UACEG,IAAG,oBACD,CAAE,WAAYhB,IAAaH,IALjC,4BAWA,wBACEiB,QAAS,kBAAiBX,GAAVD,IAChBa,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CAAE,YAAad,IAHpD,sBAQEF,GAAYE,IAEN,wBACEY,QAAS,WACPX,GAAW,GACXF,EAAY,KAEdc,KAAK,SACLF,UAAU,4BANZ,sBAaV,6BACGT,EAAaa,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YChG3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a089b52b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TYPE_AB = 'name';\nconst SORT_TYPE_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortType, reverse } = {}) {\n  let preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods = preparedGoods.sort((firstGood, secondGood) => {\n      switch (sortType) {\n        case SORT_TYPE_AB:\n          return firstGood.localeCompare(secondGood);\n\n        case SORT_TYPE_LENGTH:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, { sortType, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SORT_TYPE_AB)}\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortType !== SORT_TYPE_AB })\n          }\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SORT_TYPE_LENGTH)}\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortType !== SORT_TYPE_LENGTH })\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => (reverse ? setReverse(false) : setReverse(true))}\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortType || reverse)\n                && (\n                <button\n                  onClick={() => {\n                    setReverse(false);\n                    setSortType('');\n                  }}\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                >\n                  Reset\n                </button>\n                )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}